Перем мСписокВозможныхРеквизитов Экспорт;
Перем мРеквизитыКонтрольУникальности Экспорт;

Перем мЭтоНеНовый;

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Наименование,Объем,Крепость,ВидПродукции,Производитель,Импортер,НаименованиеПолное,ТипПродукции");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
		ОбъемДАЛ = Реквизиты.Объем;
		АлкогольнаяПродукция = Истина;
		ВидАлкогольнойПродукцииЕГАИС = Реквизиты.ВидПродукции;
		ВидПродукцииИС = Перечисления.ВидыПродукцииИС.Алкогольная;
		Если ЗначениеЗаполнено(Реквизиты.Импортер) Тогда 
			ИмпортнаяАлкогольнаяПродукция = Истина;
			ПроизводительИмпортерАлкогольнойПродукции = Реквизиты.Импортер;
		Иначе 
			ПроизводительИмпортерАлкогольнойПродукции = Реквизиты.Производитель;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВидАлкогольнойПродукцииЕГАИС)
			И Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидАлкогольнойПродукцииЕГАИС,"Маркируемый")
			И ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции(Перечисления.ВидыПродукцииИС.Пиво) Тогда
			ВидПродукцииИС = Перечисления.ВидыПродукцииИС.Пиво;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если мЭтоНеНовый = Неопределено Тогда
		мЭтоНеНовый = Не ЭтоНовый();
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		//Для элемента требуется проверять заполнение реквизита ВидНоменклатуры
		ПроверяемыеРеквизиты.Добавить("ВидНоменклатуры");
	КонецЕсли;
	
	Если (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга) Тогда
		
		// Базовая единица может быть не заполнена
		НомерУдаляемогоЭлемента = ПроверяемыеРеквизиты.Найти("БазоваяЕдиницаИзмерения");
		Если НомерУдаляемогоЭлемента <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(НомерУдаляемогоЭлемента);
		КонецЕсли;
		
	КонецЕсли;

	// Надо проверить владельца единицы хранения остатков.
	Если ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
		И ЕдиницаХраненияОстатков.Владелец <> Ссылка Тогда
		ТекстСообщения = НСтр("ru = 'Неверно указан владелец единицы хранения остатков!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаХраненияОстатков",, Отказ);
	КонецЕсли;
	
	// Надо проверить владельца единицы для отчетов.
	Если ЗначениеЗаполнено(ЕдиницаДляОтчетов)
		И ЕдиницаДляОтчетов.Владелец <> Ссылка Тогда
		ТекстСообщения = НСтр("ru = 'Неверно указан владелец единицы для отчетов!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаДляОтчетов",, Отказ);
	КонецЕсли;

	Если мЭтоНеНовый И НЕ ЭтоГруппа Тогда
		СуществуютСсылки = Неопределено;

		Если (ВидНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга)
			И Ссылка.ЕдиницаХраненияОстатков <> ЕдиницаХраненияОстатков 
			И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
			
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Изменить единицу хранения остатков уже нельзя!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаХраненияОстатков",, Отказ);
		КонецЕсли;

		Если ВидНоменклатуры.ТипНоменклатуры <> Ссылка.ВидНоменклатуры.ТипНоменклатуры
			И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
			
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Тип номенклатуры не может быть изменен'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидНоменклатуры",, Отказ);
		КонецЕсли;
		
		Если Не ВестиУчетПоСериям И Ссылка.ВестиУчетПоСериям И ПолныеПрава.Номенклатура_СуществуютСсылкиНаСерииВРегистрахНакопления(Ссылка) Тогда
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Признак ""Вести учет по сериям"" не может быть изменен!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВестиУчетПоСериям",, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		
		Если АлкогольнаяПродукция
		И НЕ ЗначениеЗаполнено(ВидАлкогольнойПродукцииЕГАИС) Тогда
		
			ТекстСообщения = НСтр("ru = 'У алкогольной продукции дожен быть указан ""Вид алкогольной продукции!""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВестиУчетПоСериям",, Отказ);
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события элемента ПриКопировании.
//
Процедура ПриКопировании(ОбъектКопирования)

	Если Не ЭтоГруппа Тогда
		ЕдиницаХраненияОстатков = Неопределено;
		ЕдиницаДляОтчетов       = Неопределено;
		ЕдиницаИзмеренияМест    = Неопределено;
		ОсновноеИзображение     = Неопределено;
		НазначениеИспользования = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)

	Если мЭтоНеНовый = Неопределено Тогда
		мЭтоНеНовый = Не ЭтоНовый();
	КонецЕсли;

	Если Не ОбменДанными.Загрузка И Не ЭтоГруппа Тогда
		Если Не Услуга И НЕ ЗначениеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
			#Если Клиент Тогда
			РаботаСДиалогами.СообщитьПользователюНезаполненРеквизит(Ссылка, "базовая единица");
			#КонецЕсли
			Отказ = Истина;
		Иначе
			// Надо проверить владельца единицы хранения остатков.
			Если ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
			   И ЕдиницаХраненияОстатков.Владелец <> Ссылка Тогда
				ТекстСообщения = "У единицы хранения остатков номенклатуры """ + СокрЛП(Ссылка) + """ неверно указан владелец!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ЕдиницаДляОтчетов) Тогда
			ЕдиницаДляОтчетов = ЕдиницаХраненияОстатков;
		КонецЕсли;

		// Надо проверить владельца единицы для отчетов.
		Если ЗначениеЗаполнено(ЕдиницаДляОтчетов)
		   И ЕдиницаДляОтчетов.Владелец <> Ссылка Тогда
			ТекстСообщения = "У единицы для отчетов номенклатуры """ + СокрЛП(Ссылка) + """ неверно указан владелец!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;

		Если мЭтоНеНовый Тогда
			СуществуютСсылки = Неопределено;

			Если Не Услуга И Ссылка.ЕдиницаХраненияОстатков <> ЕдиницаХраненияОстатков И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
				ТекстСообщения = "Единица """ + СокрЛП(Ссылка.ЕдиницаХраненияОстатков) + """ является единицей хранения остатков для """ + Наименование + """
				|и уже участвует в товародвижении. 
				|Изменить эту единицу уже нельзя!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;

			Если (Услуга <> Ссылка.Услуга Или Комплект <> Ссылка.Комплект Или Набор <> Ссылка.Набор)
			   И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
				ТекстСообщения = "Номенклатура """ + СокрЛП(Ссылка) + """ участвует в товародвижении.
				|Нельзя изменить тип номенклатуры (Услуга, товар, набор-комплект), если позиция номенклатуры участвует в товародвижении!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;

			Если Не ВестиУчетПоСериям И Ссылка.ВестиУчетПоСериям И ПолныеПрава.Номенклатура_СуществуютСсылкиНаСерииВРегистрахНакопления(Ссылка) Тогда
				ТекстСообщения = "Номенклатура """ + СокрЛП(Ссылка) + """ участвует в товародвижении.
				|признак учета по сериям не может быть изменен!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			#Если Клиент Тогда
			РаботаСДиалогами.СообщитьПользователюНезаполненРеквизит(Ссылка, "вид номенклатуры");
			#КонецЕсли
			Отказ = Истина;
		КонецЕсли;
		Если НЕ Отказ Тогда
			Если Не ВестиУчетПоСериям Тогда
				Если ЗначениеЗаполнено(НомерГТД) Тогда
					НомерГТД = Справочники.НомераГТД.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если АлкогольнаяПродукцияВоВскрытойТаре Тогда
			ОбъемДал = 0;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

Процедура СохранитьНастройкиНоменклатуры(ПараметрыНастроек, Отказ) Экспорт
	
	Если Не ПараметрыНастроек.ИспользуетсяЧастичноеВыбытиеИСМП Тогда
		
		ОчиститьОписаниеНоменклатуры(ПараметрыНастроек, Отказ);
		
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		ДанныеОписания = ИнтеграцияИСМП.ИнициализироватьДанныеОписанияНоменклатуры();
		ЗаполнитьЗначенияСвойств(ДанныеОписания, ПараметрыНастроек);
		
		Если ПараметрыНастроек.ТребуетВзвешивания Тогда
			ДанныеОписания.ВариантИспользованияЕдиницыХранения = Перечисления.ВариантыИспользованияЕдиницыХраненияИС.МернаяПродукцияТребуетУказанияЗначения;
			ДанныеОписания.ВариантЧастичногоВыбытия = Перечисления.ВариантыУчетаЧастичногоВыбытияИС.ПустаяСсылка();
			ДанныеОписания.ЕмкостьПотребительскойУпаковки = 0;
			ДанныеОписания.КоличествоВПотребительскойУпаковке = 0;
		Иначе
			ДанныеОписания.ВариантИспользованияЕдиницыХранения = Перечисления.ВариантыИспользованияЕдиницыХраненияИС.ЗаданУпаковками;
			ДанныеОписания.ВариантЧастичногоВыбытия = Перечисления.ВариантыУчетаЧастичногоВыбытияИС.ТекущаяНоменклатура;
			ДанныеОписания.КоличествоВПотребительскойУпаковке = 1;
			
			Если ЗначениеЗаполнено(ПараметрыНастроек.ПотребительскаяУпаковка) Тогда
				СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыНастроек.ПотребительскаяУпаковка, "Коэффициент");
				ДанныеОписания.КоличествоВПотребительскойУпаковке = СтруктураРеквизитов.Коэффициент;
			КонецЕсли;
		КонецЕсли;
		
		РегистрыСведений.ОписаниеНоменклатурыИС.УстановитьОписание(ДанныеОписания);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Произошла ошибка при записи данных по видам упаковок ИС МП:
			           |%1';
			           |en = 'Произошла ошибка при записи данных по видам упаковок ИС МП:
			           |%1'"),
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Отказ = Истина;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ОчиститьОписаниеНоменклатуры(ПараметрыНастроек, Отказ)
	
	// удаление ранее записанной настройки
	
	НачатьТранзакцию();
	
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		ДанныеОписания = РегистрыСведений.ОписаниеНоменклатурыИС.СоздатьМенеджерЗаписи();
		ДанныеОписания.Номенклатура = ПараметрыНастроек.Номенклатура;
		ДанныеОписания.Прочитать();
		
		Если ДанныеОписания.Выбран() Тогда
			ДанныеОписания.Удалить();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Произошла ошибка при удалении данных по видам упаковок ИС МП:
			           |%1';
			           |en = 'Произошла ошибка при удалении данных по видам упаковок ИС МП:
			           |%1'"),
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Отказ = Истина;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		
		ВызватьИсключение;
		
	КонецПопытки;
	
	
КонецПроцедуры